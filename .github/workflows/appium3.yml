name: Appium CI
 
on: 

  push:

  workflow_dispatch:
 
permissions:

  contents: read

  checks: write

  actions: write
 
jobs:

  build:

    runs-on: ubuntu-latest

    env:

      ANDROID_SDK_ROOT: ${{ github.workspace }}/android-sdk

      ANDROID_HOME: ${{ github.workspace }}/android-sdk

    strategy:

      matrix:

        api-level: [34]
 
    steps:

      - name: Checkout Repository

        uses: actions/checkout@v4
 
      - name: Set up JDK 11

        uses: actions/setup-java@v3

        with:

          distribution: 'zulu'

          java-version: '11'

          java-package: 'jdk+fx'
 
      - name: Set up .NET

        uses: actions/setup-dotnet@v3

        with:

          dotnet-version: '8.0'
 
      - name: Set up Node.js

        uses: actions/setup-node@v4

        with:

          node-version: '18'
 
      - name: Install Dependencies

        run: |

          sudo apt-get update

          sudo apt-get install -y \

            libjaxb-java \

            wget \

            unzip \

            lib32gcc-s1 \

            lib32stdc++6
 
      - name: Setup Android SDK

        run: |

          mkdir -p $ANDROID_SDK_ROOT

          wget -q https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip

          unzip -q commandlinetools-linux-9477386_latest.zip

          mkdir -p $ANDROID_SDK_ROOT/cmdline-tools/

          mv cmdline-tools $ANDROID_SDK_ROOT/cmdline-tools/latest

          echo "$ANDROID_SDK_ROOT/cmdline-tools/latest/bin" >> $GITHUB_PATH

          echo "$ANDROID_SDK_ROOT/platform-tools" >> $GITHUB_PATH

          echo "SDK Root: $ANDROID_SDK_ROOT"

          ls -la $ANDROID_SDK_ROOT/cmdline-tools/latest/bin
 
      - name: Accept SDK Licenses

        run: |

          yes | $ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager --licenses || true
 
      - name: Install SDK Packages

        run: |

          $ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager --verbose \

            "build-tools;34.0.0" \

            "platforms;android-${{ matrix.api-level }}" \

            "platform-tools" \

            "system-images;android-${{ matrix.api-level }};google_apis_playstore;arm64-v8a" \

            "emulator"
 
      - name: Verify SDK Installation

        run: |

          echo "Installed packages:"

          $ANDROID_SDK_ROOT/cmdline-tools/latest/bin/sdkmanager --list_installed

          echo "Directory structure:"

          ls -R $ANDROID_SDK_ROOT
 
      - name: Create AVD

        run: |

          echo "no" | $ANDROID_SDK_ROOT/cmdline-tools/latest/bin/avdmanager create avd \

            --name "test" \

            --package "system-images;android-${{ matrix.api-level }};google_apis_playstore;arm64-v8a" \

            --device "pixel" \

            --force
 
      - name: Start Emulator

        run: |

          $ANDROID_SDK_ROOT/emulator/emulator \

            -avd test \

            -no-window \

            -no-audio \

            -no-boot-anim \

            -gpu swiftshader_indirect &

          echo "Waiting for emulator..."

          $ANDROID_SDK_ROOT/platform-tools/adb wait-for-device shell \

            'while [[ -z $(getprop sys.boot_completed) ]]; do sleep 1; done'

          $ANDROID_SDK_ROOT/platform-tools/adb shell settings put global window_animation_scale 0

          $ANDROID_SDK_ROOT/platform-tools/adb shell settings put global transition_animation_scale 0

          $ANDROID_SDK_ROOT/platform-tools/adb shell settings put global animator_duration_scale 0
 
      - name: Setup Appium

        run: |

          npm install -g appium

          appium driver install uiautomator2

          nohup appium &

          sleep 10
 
      - name: Run Tests

        run: |

          dotnet test --logger "trx;LogFileName=TestResults.trx"

          if [ $? -ne 0 ]; then

            echo "Test execution failed"

            exit 1

          fi
 
      - name: Upload Test Results

        if: always()

        uses: actions/upload-artifact@v4

        with:

          name: test-results

          path: "**/TestResults.trx"

          retention-days: 30
 
      - name: Cleanup

        if: always()

        run: |

          $ANDROID_SDK_ROOT/platform-tools/adb emu kill || true

          pkill -f appium || true
 
